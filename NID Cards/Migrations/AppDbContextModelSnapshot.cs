// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NID_Cards.Data.DataBase_Context;

#nullable disable

namespace NID_Cards.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NID_Cards.Models.BirthSite", b =>
                {
                    b.Property<byte>("BirthSiteID")
                        .HasColumnType("tinyint");

                    b.Property<string>("BirthSiteName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("BirthSiteID");

                    b.ToTable("BirthSites");
                });

            modelBuilder.Entity("NID_Cards.Models.Citizen", b =>
                {
                    b.Property<long>("NID")
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(700)
                        .HasColumnType("nvarchar(700)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("BirthSiteID")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("DateOfIssue")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<byte>("GovernorateID")
                        .HasColumnType("tinyint");

                    b.Property<string>("HusbandName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("MaritalStatus")
                        .HasColumnType("int");

                    b.Property<byte[]>("NIDBackImage")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("NIDFrontImage")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("NIDIsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<byte[]>("PersonalPhoto")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PlaceOfIssue")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Religion")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("NID");

                    b.HasIndex("BirthSiteID");

                    b.HasIndex("GovernorateID");

                    b.ToTable("Citizens");
                });

            modelBuilder.Entity("NID_Cards.Models.Governorate", b =>
                {
                    b.Property<byte>("GovernorateID")
                        .HasColumnType("tinyint");

                    b.Property<string>("GovernorateName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("GovernorateID");

                    b.ToTable("Governorates");
                });

            modelBuilder.Entity("NID_Cards.Models.Citizen", b =>
                {
                    b.HasOne("NID_Cards.Models.BirthSite", "BirthSite")
                        .WithMany("Citizens")
                        .HasForeignKey("BirthSiteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NID_Cards.Models.Governorate", "Governorate")
                        .WithMany("Citizens")
                        .HasForeignKey("GovernorateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BirthSite");

                    b.Navigation("Governorate");
                });

            modelBuilder.Entity("NID_Cards.Models.BirthSite", b =>
                {
                    b.Navigation("Citizens");
                });

            modelBuilder.Entity("NID_Cards.Models.Governorate", b =>
                {
                    b.Navigation("Citizens");
                });
#pragma warning restore 612, 618
        }
    }
}
